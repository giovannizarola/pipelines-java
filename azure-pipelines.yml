# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DownloadSecureFile@1
  name: mavenSettings # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
  displayName: 'download settings.xml'
  inputs:
    secureFile: settings.xml # The file name or GUID of the secure file

- script: |
    echo Copy file $(mavenSettings.secureFilePath) to maven home...
    sudo md /root/.m2
    sudo cp -f $(mavenSettings.secureFilePath) /root/.m2/settings.xml
  
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: CopyFiles@2
  inputs:
    SourceFolder: 'target'
    Contents: '*.war'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: hello
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'deploy'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

